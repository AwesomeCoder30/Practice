{
  "basePath" : "/",
  "schemes" : [ "http" ],
  "swagger" : "2.0",
  "host" : "apis.accela.com",
  "info" : {
    "description" : "Use the Address-Parcel-Owner (\"APO\") API to get, create, and update reference information about addresses, parcels, and owners used in land or property management solutions. Because reference APO can be associated to multiple transactional records, a reference APO object cannot be deleted.",
    "title" : "Addresses, Parcels, Owners",
    "version" : "v4"
  },
  "tags" : [ {
    "name" : "Addresses",
    "description" : "An address provides details about the physical location of a parcel, building, contact, and so forth. An address is part of a property's APO (address, parcel, owner) information that is typically associated to a record. Addresses are stored as reference data that can be attached to transaction objects."
  }, {
    "name" : "Parcels",
    "description" : "A parcel defines a piece of land with a specific location and legally defined boundaries. The county assessor's office typically maintains information about all land parcels within its jurisdiction and imports parcel information, from a file, into the system. \n\n Parcels comprise a central component of a land management solution or building permit solution. Owner, address, contact, fee, and application records exist in relation to work on a particular parcel. For example, an applicant may want to build an apartment complex on a particular parcel."
  }, {
    "name" : "Owners",
    "description" : "An owner defines an individual or entity related to a parcel so that the owner becomes the responsible party and point of contact for the parcel. The parcel owner must initiate or approve all work done on a parcel."
  } ],
  "paths" : {
    "/v4/addresses" : {
      "get" : {
        "description" : "Gets the reference addresses available in the system. Specify at least one filter criteria.\n\n\n\n**API Endpoint**:  GET /v4/addresses \n\n**Scope**:  addresses \n\n**App Type**:  All \n\n**Authorization Type**:  No authorization required \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get All Addresses",
        "operationId" : "v4.get.addresses",
        "tags" : [ "Addresses" ],
        "parameters" : [ {
          "description" : "The unique address id assigned by the Civic Platform server.",
          "format" : "int64",
          "in" : "query",
          "name" : "id",
          "required" : false,
          "type" : "integer"
        }, {
          "description" : "The address type.",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time.",
          "enum" : [ "Y", "N" ],
          "in" : "query",
          "name" : "isPrimary",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The street name for the address.",
          "in" : "query",
          "name" : "streetName",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The start of a range of street numbers.",
          "format" : "int64",
          "in" : "query",
          "name" : "streetStart",
          "required" : false,
          "type" : "integer"
        }, {
          "description" : "RefAddress streetEnd",
          "format" : "int64",
          "in" : "query",
          "name" : "streetEnd",
          "required" : false,
          "type" : "integer"
        }, {
          "description" : "The street direction of the primary address associated with the application.",
          "in" : "query",
          "name" : "direction",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The street direction of the primary address associated with the application.",
          "in" : "query",
          "name" : "streetSuffixDirection",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The street direction of the primary address associated with the application.",
          "in" : "query",
          "name" : "streetSuffix",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The name of the city.",
          "in" : "query",
          "name" : "city",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The name of the country.",
          "in" : "query",
          "name" : "country",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "The state corresponding to the address on record.",
          "in" : "query",
          "name" : "state",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Related objects to be returned with the response. The related object(s) will be returned if data exists; if data does not exist, the requested object(s) will not be included in the response. \n\nAdded in Civic Platform version: 9.3.0",
          "in" : "query",
          "name" : "expand",
          "enum" : [ "customForms" ],
          "type" : "string"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_addressModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/addresses/{id}" : {
      "get" : {
        "description" : "Gets detailed information for the specified address.\n\n\n\n**API Endpoint**:  GET /v4/addresses/{id} \n\n**Scope**:  addresses \n\n**App Type**:  All \n\n**Authorization Type**:  No authorization required \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get Address",
        "operationId" : "v4.get.addresses.id",
        "tags" : [ "Addresses" ],
        "parameters" : [ {
          "$ref" : "#/parameters/idAddressPathParam"
        }, {
          "description" : "Related objects to be returned with the response. The related object(s) will be returned if data exists; if data does not exist, the requested object(s) will not be included in the response. \n\nAdded in Civic Platform version: 9.3.0 ",
          "in" : "query",
          "name" : "expand",
          "enum" : [ "customForms" ],
          "type" : "string"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_addressModelWithCustomForms"
            }
          },
          "400" : {
            "description" : "Invalid request.",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      },
      "put" : {
        "summary" : "Update an Address",
        "description" : "Updates a reference address, including address custom fields. \n\n\n\n**API Endpoint**:  PUT /v4/addresses/{id} \n\n**Scope**:  addresses \n\n**App Type**:  Agency \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 9.3.0\n\n",
        "operationId" : "v4.put.addresses.id",
        "tags" : [ "Addresses" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/idAddressPathParam"
        }, {
          "$ref" : "#/parameters/lang"
        }, {
          "name" : "address",
          "in" : "body",
          "description" : "The reference address to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/request_addressModelWithCustomForms"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_addressModelWithCustomForms"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/addresses/{id}/conditions" : {
      "get" : {
        "description" : "Returns all the address conditions for a given address. The results can be filtered by type and status.\n\n\n\n**API Endpoint**:  GET /v4/addresses/{id}/conditions  \n\n**Scope**:  addresses \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 9.0.0\n\n",
        "summary" : "Get All Address Conditions",
        "operationId" : "v4.get.addresses.id.conditions",
        "tags" : [ "Addresses" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/idAddressPathParam"
        }, {
          "$ref" : "#/parameters/conditionTypeQueryParam"
        }, {
          "$ref" : "#/parameters/conditionNameQueryParam"
        }, {
          "$ref" : "#/parameters/conditionStatusQueryParam"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_conditionModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/addresses/{id}/parcels" : {
      "get" : {
        "description" : "Gets the parcels associated with the specified addresses.\n\n\n\n**API Endpoint**:  GET /v4/addresses/{id}/parcels \n\n**Scope**:  addresses \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get All Address Parcels",
        "operationId" : "v4.get.addresses.id.parcels",
        "tags" : [ "Addresses" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/idAddressPathParam"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_parcelModel"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/addresses/{id}/records" : {
      "get" : {
        "description" : "Gets the records associated with the given reference address.\n\n\n\n**API Endpoint**:  GET /v4/addresses/{id}/records \n\n**Scope**:  addresses \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 9.3.0 \n\n",
        "summary" : "Get All Address Records",
        "operationId" : "v4.get.addresses.id.records",
        "tags" : [ "Addresses" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/idAddressPathParam"
        }, {
          "description" : "Filter by one or more comma-delimited record types. Specify a record value using its hierarchical structure, for example: types=AMS%2FElectric%2FPole%2FInstall,AMS%2FElectric%2FPole%2FMaintain \n\nSee [Get All Record Types](./api-settings.html#operation/v4.get.settings.records.types).",
          "in" : "query",
          "name" : "types",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by one or more comma-delimited record statuses. For example: statuses=Open,Ready%20to%20Issue \n\nSee [Get All Statuses for Record Type](./api-settings.html#operation/v4.get.settings.records.types.id.statuses).",
          "in" : "query",
          "name" : "statuses",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_simpleRecordModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/parcels" : {
      "get" : {
        "description" : "Gets a list of reference parcels in the agency database. Specify at least one filter criteria.\n\n\n\n**API Endpoint**:  GET /v4/parcels \n\n**Scope**:  parcels \n\n**App Type**:  All \n\n**Authorization Type**:  No authorization required \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get All Parcels",
        "operationId" : "v4.get.parcels",
        "tags" : [ "Parcels" ],
        "parameters" : [ {
          "$ref" : "#/parameters/parcelNumberQueryParam"
        }, {
          "description" : "Filter by parcel lot.",
          "in" : "query",
          "name" : "lot",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by whether or not parcel is primary.",
          "in" : "query",
          "name" : "isPrimary",
          "required" : false,
          "type" : "string",
          "enum" : [ "Y", "N" ]
        }, {
          "description" : "Filter by parcel range.",
          "in" : "query",
          "name" : "range",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by parcel subdivision.",
          "in" : "query",
          "name" : "subdivision",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by parcel section.",
          "format" : "int64",
          "in" : "query",
          "name" : "section",
          "required" : false,
          "type" : "integer"
        }, {
          "description" : "Filter by parcel township.",
          "in" : "query",
          "name" : "township",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's full name.",
          "in" : "query",
          "name" : "fullName",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by street name.",
          "in" : "query",
          "name" : "streetName",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by city.",
          "in" : "query",
          "name" : "city",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by street type.",
          "in" : "query",
          "name" : "streetType",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by the starting number of a street address range.",
          "format" : "int64",
          "in" : "query",
          "name" : "streetStart",
          "required" : false,
          "type" : "integer"
        }, {
          "description" : "Filter by the ending number of a street address range.",
          "format" : "int64",
          "in" : "query",
          "name" : "streetEnd",
          "required" : false,
          "type" : "integer"
        }, {
          "description" : "Related objects to be returned with the response. The related object(s) will be returned if data exists; if data does not exist, the requested object(s) will not be included in the response. \n\nAdded in Civic Platform version: 9.3.0",
          "in" : "query",
          "name" : "expand",
          "enum" : [ "customForms" ],
          "type" : "string"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_parcelModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/parcels/{id}" : {
      "get" : {
        "description" : "Gets information about a reference parcel.\n\n\n\n**API Endpoint**:  GET /v4/parcels/{id} \n\n**Scope**:  parcels \n\n**App Type**:  All \n\n**Authorization Type**:  No authorization required \n\n**Civic Platform version**: \t7.3.2\n\n",
        "summary" : "Get Parcel",
        "operationId" : "v4.get.parcels.id",
        "tags" : [ "Parcels" ],
        "parameters" : [ {
          "$ref" : "#/parameters/idParcelPathParam"
        }, {
          "description" : "Related objects to be returned with the response. The related object(s) will be returned if data exists; if data does not exist, the requested object(s) will not be included in the response. \n\nAdded in Civic Platform version: 9.3.0",
          "in" : "query",
          "name" : "expand",
          "enum" : [ "customForms" ],
          "type" : "string"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_parcelModel"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/parcels/{id}/addresses" : {
      "get" : {
        "description" : "Gets a list of addresses for a reference parcel.\n\n\n\n**API Endpoint**:  GET /v4/parcels/{id}/addresses \n\n**Scope**:  parcels \n\n**App Type**:  All \n\n**Authorization Type**:  No authorization required \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get All Parcel Addresses",
        "operationId" : "v4.get.parcels.id.addresses",
        "tags" : [ "Parcels" ],
        "parameters" : [ {
          "$ref" : "#/parameters/idParcelPathParam"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_addressModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/parcels/{parcelId}/owners" : {
      "get" : {
        "description" : "Gets a list of owners for the reference parcel.\n\n\n\n**API Endpoint**:  GET /v4/parcels/{parcelId}/owners \n\n**Scope**:  parcels \n\n**App Type**:  All \n\n**Authorization Type**:  No authorization required \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get All Parcel Owners",
        "operationId" : "v4.get.parcels.parcelId.owners",
        "tags" : [ "Parcels" ],
        "parameters" : [ {
          "$ref" : "#/parameters/parcelIdPathParam"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_ownerModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/parcels/{parcelId}/conditions" : {
      "get" : {
        "description" : "Gets the conditions for the reference parcel.\n\n\n\n**API Endpoint**:  GET /v4/parcels/{parcelId}/conditions \n\n**Scope**:  parcels \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 8.0.0\n\n",
        "summary" : "Get All Parcel Conditions",
        "operationId" : "v4.get.parcels.parcelId.conditions",
        "tags" : [ "Parcels" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/parcelIdPathParam"
        }, {
          "$ref" : "#/parameters/conditionTypeQueryParam"
        }, {
          "$ref" : "#/parameters/conditionNameQueryParam"
        }, {
          "$ref" : "#/parameters/conditionStatusQueryParam"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_conditionModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/parcels/{id}/records" : {
      "get" : {
        "description" : "Gets the records associated with the given reference parcel.\n\n\n\n**API Endpoint**:  GET /v4/parcels/{id}/records \n\n**Scope**:  parcels \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 9.3.0 \n\n",
        "summary" : "Get All Parcel Records",
        "operationId" : "v4.get.parcels.id.records",
        "tags" : [ "Parcels" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/idParcelPathParam"
        }, {
          "description" : "If true, records for the given reference parcel and all historical parcels in its genealogy (such as its parents, grandparents, or ancestors) will be returned. If false, only records for the given reference parcel will be returned. Default is false.",
          "in" : "query",
          "name" : "includeRecordsFromParcelHistory",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_simpleRecordModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/owners" : {
      "get" : {
        "description" : "Gets a list of reference owners in the agency database. Specify at least one filter criteria.\n\n\n\n**API Endpoint**:  GET /v4/owners \n\n**Scope**:  owners \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get All Owners",
        "operationId" : "v4.get.owners",
        "tags" : [ "Owners" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "description" : "Filter by owner's full name.",
          "in" : "query",
          "name" : "fullName",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's first name.",
          "in" : "query",
          "name" : "firstName",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's last name.",
          "in" : "query",
          "name" : "lastName",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's parcel id.",
          "in" : "query",
          "name" : "parcelId",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's email.",
          "in" : "query",
          "name" : "email",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's city.",
          "in" : "query",
          "name" : "city",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's state.",
          "in" : "query",
          "name" : "state",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Filter by owner's country.",
          "in" : "query",
          "name" : "country",
          "required" : false,
          "type" : "string"
        }, {
          "description" : "Related objects to be returned with the response. The related object(s) will be returned if data exists; if data does not exist, the requested object(s) will not be included in the response. \n\nAdded in Civic Platform version: 9.3.0",
          "in" : "query",
          "name" : "expand",
          "enum" : [ "customForms" ],
          "type" : "string"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_ownerModelWithCustomFormsArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/owners/{id}" : {
      "get" : {
        "description" : "Gets information about a reference owner.\n\n\n\n**API Endpoint**:  GET /v4/owners/{id} \n\n**Scope**:  owners \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 7.3.2\n\n",
        "summary" : "Get Owner",
        "operationId" : "v4.get.owners.id",
        "tags" : [ "Owners" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/idOwnerPathParam"
        }, {
          "description" : "Related objects to be returned with the response. The related object(s) will be returned if data exists; if data does not exist, the requested object(s) will not be included in the response. \n\nAdded in Civic Platform version: 9.3.0 (API-4591)",
          "in" : "query",
          "name" : "expand",
          "enum" : [ "customForms" ],
          "type" : "string"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_ownerModelWithCustomForms"
            }
          },
          "400" : {
            "description" : "Invalid request.",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    },
    "/v4/owners/{ownerId}/conditions" : {
      "get" : {
        "description" : "Gets the conditions on a reference owner.\n\n\n\n**API Endpoint**:  GET /v4/owners/{ownerId}/conditions \n\n**Scope**:  owners \n\n**App Type**:  All \n\n**Authorization Type**:  Access token \n\n**Civic Platform version**: 8.0.0\n\n",
        "summary" : "Get All Owner Conditions",
        "operationId" : "v4.get.owners.ownerId.conditions",
        "tags" : [ "Owners" ],
        "parameters" : [ {
          "$ref" : "#/parameters/authHeaderParam"
        }, {
          "$ref" : "#/parameters/ownerIdPathParam"
        }, {
          "$ref" : "#/parameters/conditionTypeQueryParam"
        }, {
          "$ref" : "#/parameters/conditionNameQueryParam"
        }, {
          "$ref" : "#/parameters/conditionStatusQueryParam"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/fields"
        }, {
          "$ref" : "#/parameters/lang"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request. Note: A successful request may return no data matching the filter criteria. A successful request may also return messages related to Event Manager Scripting Engine back-end processing.",
            "schema" : {
              "$ref" : "#/definitions/response_conditionModelArray"
            }
          },
          "400" : {
            "description" : "Invalid request."
          },
          "401" : {
            "description" : "Authorization failed."
          },
          "403" : {
            "description" : "Forbidden request."
          },
          "404" : {
            "description" : "Requested resource not found."
          },
          "500" : {
            "description" : "Internal server error or bad connection."
          }
        }
      }
    }
  },
  "definitions" : {
    "response_addressModelArray" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "items" : {
            "$ref" : "#/definitions/addressModel"
          },
          "type" : "array"
        },
        "page" : {
          "$ref" : "#/definitions/pageModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "response_addressModel" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/addressModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "addressModel" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "addressTypeFlag" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          },
          "description" : "A code name or an abbreviation of the address type."
        },
        "auditStatus" : {
          "type" : "string",
          "description" : "The audit status of the address."
        },
        "city" : {
          "type" : "string",
          "description" : "The name of the city."
        },
        "country" : {
          "type" : "object",
          "description" : "The name of the country.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "county" : {
          "type" : "string",
          "description" : "The name of the county."
        },
        "customForms" : {
          "items" : {
            "$ref" : "#/definitions/customAttributeModel"
          },
          "type" : "array"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the address."
        },
        "direction" : {
          "description" : "The street direction of the primary address associated with the application.",
          "type" : "object",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "distance" : {
          "type" : "number",
          "format" : "double",
          "description" : "The distance from another landmark used to locate the address."
        },
        "houseAlphaStart" : {
          "type" : "string",
          "description" : "The beginning alphabetic unit in street address."
        },
        "houseAlphaEnd" : {
          "type" : "string",
          "description" : "The ending alphabetic unit in street address."
        },
        "houseFractionStart" : {
          "type" : "object",
          "description" : "Beginning fraction value used in combination with the Street number fields.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "houseFractionEnd" : {
          "type" : "object",
          "description" : "Ending franction value used in combination with the Street number fields.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "houseNumberEndFrom" : {
          "type" : "number",
          "description" : "The first of the ending house number range.",
          "format" : "long"
        },
        "houseNumberEndTo" : {
          "type" : "number",
          "description" : "The last of the ending house number range.",
          "format" : "long"
        },
        "houseNumberStartFrom" : {
          "type" : "number",
          "description" : "The first of the start house number range.",
          "format" : "long"
        },
        "houseNumberStartTo" : {
          "type" : "number",
          "description" : "The last of the start house number range.",
          "format" : "long"
        },
        "id" : {
          "format" : "int64",
          "type" : "integer",
          "description" : "The unique address id assigned by the Civic Platform server."
        },
        "inspectionDistrict" : {
          "type" : "string",
          "description" : "The inspection district where the address is located."
        },
        "inspectionDistrictPrefix" : {
          "type" : "string",
          "description" : "The prefix for the inspection district where the address is located."
        },
        "isPrimary" : {
          "type" : "string",
          "description" : "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time."
        },
        "levelStart" : {
          "type" : "string",
          "description" : "The starting level number (floor number) that makes up the address within a complex."
        },
        "levelEnd" : {
          "type" : "string",
          "description" : "The ending level number (floor number) that makes up the address within a complex."
        },
        "levelPrefix" : {
          "type" : "string",
          "description" : "The prefix for the level numbers (floor numbers) that make up the address."
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "The neighborhood where the address is located."
        },
        "neighborhoodPrefix" : {
          "type" : "string",
          "description" : "The prefix for neighborhood where the address is located."
        },
        "postalCode" : {
          "type" : "string",
          "description" : "The postal ZIP code for the address."
        },
        "secondaryStreet" : {
          "type" : "string",
          "description" : "This field (along with the Secondary Road Number field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
        },
        "secondaryStreetNumber" : {
          "type" : "number",
          "format" : "long",
          "description" : "This field (along with the Secondary Road field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
        },
        "sourceFlag" : {
          "type" : "string",
          "description" : "The Accela permitting system that stores this address information, such as Civic Platform, Kiva, or Tidemark."
        },
        "sourceNumber" : {
          "type" : "number",
          "format" : "long",
          "description" : "A number that identifies the Accela permitting system that stores this address information."
        },
        "state" : {
          "type" : "object",
          "description" : "The name of the country.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "status" : {
          "type" : "object",
          "description" : "The address status indicating whether the address is active or inactive.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "streetAddress" : {
          "type" : "string",
          "description" : "The street address."
        },
        "streetEnd" : {
          "type" : "number",
          "format" : "long",
          "description" : "The ending number of a street address range."
        },
        "streetName" : {
          "type" : "string",
          "description" : "The name of the street."
        },
        "streetPrefix" : {
          "type" : "string",
          "description" : "Any part of an address that appears before a street name or number. For example, if the address is 123 West Main, \"West\" is the street prefix."
        },
        "streetStart" : {
          "type" : "number",
          "format" : "long",
          "description" : "The starting number of a street address range."
        },
        "streetSuffix" : {
          "type" : "object",
          "description" : "The type of street such as \"Lane\" or \"Boulevard\".",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "streetSuffixDirection" : {
          "type" : "object",
          "description" : "The direction appended to the street suffix. For example, if the address is 500 56th Avenue NW, \"NW\" is the street suffix direction.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "unitStart" : {
          "type" : "string",
          "description" : "The starting value of a range of unit numbers."
        },
        "unitEnd" : {
          "type" : "string",
          "description" : "The ending value of a range of unit numbers."
        },
        "unitType" : {
          "type" : "object",
          "description" : "The unit type designation of the address.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "xCoordinate" : {
          "type" : "number",
          "format" : "double",
          "description" : "The longitudinal coordinate for this address."
        },
        "yCoordinate" : {
          "type" : "number",
          "format" : "double",
          "description" : "The latitudinal coordinate for this address."
        }
      }
    },
    "request_addressModelWithCustomForms" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "addressTypeFlag" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          },
          "description" : "A code name or an abbreviation of the address type."
        },
        "auditStatus" : {
          "type" : "string",
          "description" : "The audit status of the address."
        },
        "city" : {
          "type" : "string",
          "description" : "The name of the city."
        },
        "country" : {
          "type" : "object",
          "description" : "The name of the country.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "county" : {
          "type" : "string",
          "description" : "The name of the county."
        },
        "customForms" : {
          "items" : {
            "$ref" : "#/definitions/customAttributeModel"
          },
          "type" : "array"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the address."
        },
        "direction" : {
          "description" : "The street direction of the primary address associated with the application.",
          "type" : "object",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "distance" : {
          "type" : "number",
          "format" : "double",
          "description" : "The distance from another landmark used to locate the address."
        },
        "houseAlphaStart" : {
          "type" : "string",
          "description" : "The beginning alphabetic unit in street address."
        },
        "houseAlphaEnd" : {
          "type" : "string",
          "description" : "The ending alphabetic unit in street address."
        },
        "houseFractionStart" : {
          "type" : "object",
          "description" : "Beginning fraction value used in combination with the Street number fields.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "houseFractionEnd" : {
          "type" : "object",
          "description" : "Ending franction value used in combination with the Street number fields.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "houseNumberEndFrom" : {
          "type" : "number",
          "description" : "The first of the ending house number range.",
          "format" : "long"
        },
        "houseNumberEndTo" : {
          "type" : "number",
          "description" : "The last of the ending house number range.",
          "format" : "long"
        },
        "houseNumberStartFrom" : {
          "type" : "number",
          "description" : "The first of the start house number range.",
          "format" : "long"
        },
        "houseNumberStartTo" : {
          "type" : "number",
          "description" : "The last of the start house number range.",
          "format" : "long"
        },
        "inspectionDistrict" : {
          "type" : "string",
          "description" : "The inspection district where the address is located."
        },
        "inspectionDistrictPrefix" : {
          "type" : "string",
          "description" : "The prefix for the inspection district where the address is located."
        },
        "isPrimary" : {
          "type" : "string",
          "description" : "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time."
        },
        "levelStart" : {
          "type" : "string",
          "description" : "The starting level number (floor number) that makes up the address within a complex."
        },
        "levelEnd" : {
          "type" : "string",
          "description" : "The ending level number (floor number) that makes up the address within a complex."
        },
        "levelPrefix" : {
          "type" : "string",
          "description" : "The prefix for the level numbers (floor numbers) that make up the address."
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "The neighborhood where the address is located."
        },
        "neighborhoodPrefix" : {
          "type" : "string",
          "description" : "The prefix for neighborhood where the address is located."
        },
        "postalCode" : {
          "type" : "string",
          "description" : "The postal ZIP code for the address."
        },
        "secondaryStreet" : {
          "type" : "string",
          "description" : "This field (along with the Secondary Road Number field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
        },
        "secondaryStreetNumber" : {
          "type" : "number",
          "format" : "long",
          "description" : "This field (along with the Secondary Road field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
        },
        "sourceFlag" : {
          "type" : "string",
          "description" : "The Accela permitting system that stores this address information, such as Civic Platform, Kiva, or Tidemark."
        },
        "sourceNumber" : {
          "type" : "number",
          "format" : "long",
          "description" : "A number that identifies the Accela permitting system that stores this address information."
        },
        "state" : {
          "type" : "object",
          "description" : "The name of the country.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "status" : {
          "type" : "object",
          "description" : "The address status indicating whether the address is active or inactive.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "streetAddress" : {
          "type" : "string",
          "description" : "The street address."
        },
        "streetEnd" : {
          "type" : "number",
          "format" : "long",
          "description" : "The ending number of a street address range."
        },
        "streetName" : {
          "type" : "string",
          "description" : "The name of the street."
        },
        "streetPrefix" : {
          "type" : "string",
          "description" : "Any part of an address that appears before a street name or number. For example, if the address is 123 West Main, \"West\" is the street prefix."
        },
        "streetStart" : {
          "type" : "number",
          "format" : "long",
          "description" : "The starting number of a street address range."
        },
        "streetSuffix" : {
          "type" : "object",
          "description" : "The type of street such as \"Lane\" or \"Boulevard\".",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "streetSuffixDirection" : {
          "type" : "object",
          "description" : "The direction appended to the street suffix. For example, if the address is 500 56th Avenue NW, \"NW\" is the street suffix direction.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "unitStart" : {
          "type" : "string",
          "description" : "The starting value of a range of unit numbers."
        },
        "unitEnd" : {
          "type" : "string",
          "description" : "The ending value of a range of unit numbers."
        },
        "unitType" : {
          "type" : "object",
          "description" : "The unit type designation of the address.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "xCoordinate" : {
          "type" : "number",
          "format" : "double",
          "description" : "The longitudinal coordinate for this address."
        },
        "yCoordinate" : {
          "type" : "number",
          "format" : "double",
          "description" : "The latitudinal coordinate for this address."
        }
      }
    },
    "response_addressModelWithCustomForms" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/addressModelWithCustomForms"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "addressModelWithCustomForms" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "addressTypeFlag" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          },
          "description" : "A code name or an abbreviation of the address type."
        },
        "auditStatus" : {
          "type" : "string",
          "description" : "The audit status of the address."
        },
        "city" : {
          "type" : "string",
          "description" : "The name of the city."
        },
        "country" : {
          "type" : "object",
          "description" : "The name of the country.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "county" : {
          "type" : "string",
          "description" : "The name of the county."
        },
        "customForms" : {
          "items" : {
            "$ref" : "#/definitions/customAttributeModel"
          },
          "type" : "array"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the address."
        },
        "direction" : {
          "description" : "The street direction of the primary address associated with the application.",
          "type" : "object",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "distance" : {
          "type" : "number",
          "format" : "double",
          "description" : "The distance from another landmark used to locate the address."
        },
        "houseAlphaStart" : {
          "type" : "string",
          "description" : "The beginning alphabetic unit in street address."
        },
        "houseAlphaEnd" : {
          "type" : "string",
          "description" : "The ending alphabetic unit in street address."
        },
        "houseFractionStart" : {
          "type" : "object",
          "description" : "Beginning fraction value used in combination with the Street number fields.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "houseFractionEnd" : {
          "type" : "object",
          "description" : "Ending franction value used in combination with the Street number fields.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "houseNumberEndFrom" : {
          "type" : "number",
          "description" : "The first of the ending house number range.",
          "format" : "long"
        },
        "houseNumberEndTo" : {
          "type" : "number",
          "description" : "The last of the ending house number range.",
          "format" : "long"
        },
        "houseNumberStartFrom" : {
          "type" : "number",
          "description" : "The first of the start house number range.",
          "format" : "long"
        },
        "houseNumberStartTo" : {
          "type" : "number",
          "description" : "The last of the start house number range.",
          "format" : "long"
        },
        "id" : {
          "format" : "int64",
          "type" : "integer",
          "description" : "The unique address id assigned by the Civic Platform server."
        },
        "inspectionDistrict" : {
          "type" : "string",
          "description" : "The inspection district where the address is located."
        },
        "inspectionDistrictPrefix" : {
          "type" : "string",
          "description" : "The prefix for the inspection district where the address is located."
        },
        "isPrimary" : {
          "type" : "string",
          "description" : "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time."
        },
        "levelStart" : {
          "type" : "string",
          "description" : "The starting level number (floor number) that makes up the address within a complex."
        },
        "levelEnd" : {
          "type" : "string",
          "description" : "The ending level number (floor number) that makes up the address within a complex."
        },
        "levelPrefix" : {
          "type" : "string",
          "description" : "The prefix for the level numbers (floor numbers) that make up the address."
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "The neighborhood where the address is located."
        },
        "neighborhoodPrefix" : {
          "type" : "string",
          "description" : "The prefix for neighborhood where the address is located."
        },
        "postalCode" : {
          "type" : "string",
          "description" : "The postal ZIP code for the address."
        },
        "secondaryStreet" : {
          "type" : "string",
          "description" : "This field (along with the Secondary Road Number field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
        },
        "secondaryStreetNumber" : {
          "type" : "number",
          "format" : "long",
          "description" : "This field (along with the Secondary Road field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
        },
        "sourceFlag" : {
          "type" : "string",
          "description" : "The Accela permitting system that stores this address information, such as Civic Platform, Kiva, or Tidemark."
        },
        "sourceNumber" : {
          "type" : "number",
          "format" : "long",
          "description" : "A number that identifies the Accela permitting system that stores this address information."
        },
        "state" : {
          "type" : "object",
          "description" : "The name of the country.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "status" : {
          "type" : "object",
          "description" : "The address status indicating whether the address is active or inactive.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "streetAddress" : {
          "type" : "string",
          "description" : "The street address."
        },
        "streetEnd" : {
          "type" : "number",
          "format" : "long",
          "description" : "The ending number of a street address range."
        },
        "streetName" : {
          "type" : "string",
          "description" : "The name of the street."
        },
        "streetPrefix" : {
          "type" : "string",
          "description" : "Any part of an address that appears before a street name or number. For example, if the address is 123 West Main, \"West\" is the street prefix."
        },
        "streetStart" : {
          "type" : "number",
          "format" : "long",
          "description" : "The starting number of a street address range."
        },
        "streetSuffix" : {
          "type" : "object",
          "description" : "The type of street such as \"Lane\" or \"Boulevard\".",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "streetSuffixDirection" : {
          "type" : "object",
          "description" : "The direction appended to the street suffix. For example, if the address is 500 56th Avenue NW, \"NW\" is the street suffix direction.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "unitStart" : {
          "type" : "string",
          "description" : "The starting value of a range of unit numbers."
        },
        "unitEnd" : {
          "type" : "string",
          "description" : "The ending value of a range of unit numbers."
        },
        "unitType" : {
          "type" : "object",
          "description" : "The unit type designation of the address.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "xCoordinate" : {
          "type" : "number",
          "format" : "double",
          "description" : "The longitudinal coordinate for this address."
        },
        "yCoordinate" : {
          "type" : "number",
          "format" : "double",
          "description" : "The latitudinal coordinate for this address."
        }
      }
    },
    "ownerAddressModel" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "description" : "The first line of the address.",
          "type" : "string"
        },
        "addressLine2" : {
          "description" : "The second line of the address.",
          "type" : "string"
        },
        "addressLine3" : {
          "description" : "The third line of the address.",
          "type" : "string"
        },
        "city" : {
          "description" : "The name of the city.",
          "type" : "string"
        },
        "country" : {
          "type" : "object",
          "description" : "",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "postalCode" : {
          "description" : "The postal ZIP code for the address.",
          "type" : "string"
        },
        "state" : {
          "type" : "object",
          "description" : "",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        }
      }
    },
    "response_parcelModel" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/parcelModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "response_parcelModelArray" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "items" : {
            "$ref" : "#/definitions/parcelModel"
          },
          "type" : "array"
        },
        "page" : {
          "$ref" : "#/definitions/pageModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "parcelModel" : {
      "type" : "object",
      "properties" : {
        "block" : {
          "description" : "The block number associated with the parcel.",
          "type" : "string"
        },
        "book" : {
          "description" : "A reference to the physical location of parcel information in the County Assessor's office.",
          "type" : "string"
        },
        "censusTract" : {
          "description" : "The unique number assigned by the Census Bureau that identifies the tract to which this parcel belongs.",
          "type" : "string"
        },
        "councilDistrict" : {
          "description" : "The council district to which the parcel belongs.",
          "type" : "string"
        },
        "customForms" : {
          "items" : {
            "$ref" : "#/definitions/customAttributeModel"
          },
          "type" : "array"
        },
        "exemptionValue" : {
          "description" : "The total value of any tax exemptions that apply to the land within the parcel.",
          "format" : "double",
          "type" : "number"
        },
        "gisSequenceNumber" : {
          "description" : "The GIS object ID of the parcel.",
          "format" : "int64",
          "type" : "integer"
        },
        "id" : {
          "description" : "The system id of the parcel assigned by the Civic Platform server.",
          "type" : "string"
        },
        "improvedValue" : {
          "description" : "The total value of any improvements to the land within the parcel.",
          "format" : "double",
          "type" : "number"
        },
        "isPrimary" : {
          "description" : "Indicates whether or not to designate the parcel as the primary parcel.",
          "type" : "string"
        },
        "landValue" : {
          "description" : "The total value of the land within the parcel.",
          "format" : "double",
          "type" : "number"
        },
        "legalDescription" : {
          "description" : "The legal description of the parcel.",
          "type" : "string"
        },
        "lot" : {
          "description" : "The lot name.",
          "type" : "string"
        },
        "mapNumber" : {
          "description" : "The unique map number that identifies the map for this parcel.",
          "type" : "string"
        },
        "mapReferenceInfo" : {
          "description" : "The map reference for this parcel.",
          "type" : "string"
        },
        "page" : {
          "description" : "A reference to the physical location of the parcel information in the records of the County Assessor (or other responsible department).",
          "type" : "string"
        },
        "parcel" : {
          "description" : "The official parcel name or number, as determined by the county assessor or other responsible department.",
          "type" : "string"
        },
        "parcelArea" : {
          "description" : "The total area of the parcel. Your agency determines the standard unit of measure.",
          "format" : "double",
          "type" : "number"
        },
        "parcelNumber" : {
          "description" : "The alpha-numeric parcel number.",
          "type" : "string"
        },
        "planArea" : {
          "description" : "The total area of the parcel. Your agency determines the standard unit of measure.",
          "type" : "string"
        },
        "range" : {
          "description" : "When land is surveyed using the rectangular-survey system, range represents the measure of units east and west of the base line.",
          "type" : "string"
        },
        "section" : {
          "description" : "A piece of a township measuring 640 acres, one square mile, numbered with reference to the base line and meridian line.",
          "format" : "int64",
          "type" : "integer"
        },
        "status" : {
          "type" : "object",
          "description" : "The parcel status.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "subdivision" : {
          "type" : "object",
          "description" : "The name of the subdivision.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "supervisorDistrict" : {
          "description" : "The supervisor district to which the parcel belongs.",
          "type" : "string"
        },
        "township" : {
          "description" : "When land is surveyed using the rectangular-survey system, township represents the measure of units North or South of the base line. Townships typically measure 6 miles to a side, or 36 square miles.",
          "type" : "string"
        },
        "tract" : {
          "description" : "The name of the tract associated with this application. A tract may contain one or more related parcels.",
          "type" : "string"
        }
      }
    },
    "response_ownerModelArray" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "items" : {
            "$ref" : "#/definitions/ownerModel"
          },
          "type" : "array"
        },
        "page" : {
          "$ref" : "#/definitions/pageModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "response_ownerModel" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/ownerModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "ownerModel" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "$ref" : "#/definitions/ownerAddressModel"
        },
        "email" : {
          "description" : "The contact's email address.",
          "type" : "string"
        },
        "fax" : {
          "description" : "The fax number for the contact.",
          "type" : "string"
        },
        "firstName" : {
          "description" : "The contact's first name. This field is only active when the Contact Type selected is Individual.",
          "type" : "string"
        },
        "fullName" : {
          "description" : "The contact's full name. This field is only active when the Contact Type selected is Individual.",
          "type" : "string"
        },
        "id" : {
          "description" : "The owner system id assigned by the Civic Platform server.",
          "format" : "int64",
          "type" : "integer"
        },
        "isPrimary" : {
          "description" : "Indicates whether or not to designate the owner as the primary owner.",
          "type" : "string"
        },
        "lastName" : {
          "description" : "The last name (surname).",
          "type" : "string"
        },
        "mailAddress" : {
          "$ref" : "#/definitions/ownerAddressModel"
        },
        "middleName" : {
          "description" : "The contact's middle name.",
          "type" : "string"
        },
        "parcelId" : {
          "description" : "The unique Id generated for a parcel.",
          "type" : "string"
        },
        "phone" : {
          "description" : "The telephone number of the owner.",
          "type" : "string"
        },
        "phoneCountryCode" : {
          "description" : "The country code for the assoicated phone number.",
          "type" : "string"
        },
        "recordId" : {
          "$ref" : "#/definitions/recordIdModel"
        },
        "status" : {
          "type" : "object",
          "description" : "The owner status.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "structureName" : {
          "description" : "The name of the full or partial structure or establishment.",
          "type" : "string"
        },
        "structureType" : {
          "description" : "The type of structure or establishment",
          "type" : "string"
        },
        "taxId" : {
          "description" : "The owner's tax ID number.",
          "type" : "string"
        },
        "title" : {
          "description" : "The individual's business title.",
          "type" : "string"
        }
      }
    },
    "response_ownerModelWithCustomFormsArray" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "items" : {
            "$ref" : "#/definitions/ownerModelWithCustomForms"
          },
          "type" : "array"
        },
        "page" : {
          "$ref" : "#/definitions/pageModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "response_ownerModelWithCustomForms" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/ownerModelWithCustomForms"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "ownerModelWithCustomForms" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "$ref" : "#/definitions/ownerAddressModel"
        },
        "customForms" : {
          "items" : {
            "$ref" : "#/definitions/customAttributeModel"
          },
          "type" : "array"
        },
        "email" : {
          "description" : "The contact's email address.",
          "type" : "string"
        },
        "fax" : {
          "description" : "The fax number for the contact.",
          "type" : "string"
        },
        "firstName" : {
          "description" : "The contact's first name. This field is only active when the Contact Type selected is Individual.",
          "type" : "string"
        },
        "fullName" : {
          "description" : "The contact's full name. This field is only active when the Contact Type selected is Individual.",
          "type" : "string"
        },
        "id" : {
          "description" : "The owner system id assigned by the Civic Platform server.",
          "format" : "int64",
          "type" : "integer"
        },
        "isPrimary" : {
          "description" : "Indicates whether or not to designate the owner as the primary owner.",
          "type" : "string"
        },
        "lastName" : {
          "description" : "The last name (surname).",
          "type" : "string"
        },
        "mailAddress" : {
          "$ref" : "#/definitions/ownerAddressModel"
        },
        "middleName" : {
          "description" : "The contact's middle name.",
          "type" : "string"
        },
        "parcelId" : {
          "description" : "The unique Id generated for a parcel.",
          "type" : "string"
        },
        "phone" : {
          "description" : "The telephone number of the owner.",
          "type" : "string"
        },
        "phoneCountryCode" : {
          "description" : "The country code for the assoicated phone number.",
          "type" : "string"
        },
        "recordId" : {
          "$ref" : "#/definitions/recordIdModel"
        },
        "status" : {
          "type" : "object",
          "description" : "The owner status.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "structureName" : {
          "description" : "The name of the full or partial structure or establishment.",
          "type" : "string"
        },
        "structureType" : {
          "description" : "The type of structure or establishment",
          "type" : "string"
        },
        "taxId" : {
          "description" : "The owner's tax ID number.",
          "type" : "string"
        },
        "title" : {
          "description" : "The individual's business title.",
          "type" : "string"
        }
      }
    },
    "response_conditionModelArray" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "items" : {
            "$ref" : "#/definitions/conditionModel"
          },
          "type" : "array"
        },
        "page" : {
          "$ref" : "#/definitions/pageModel"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "conditionModel" : {
      "type" : "object",
      "properties" : {
        "actionbyDepartment" : {
          "type" : "object",
          "description" : "The department responsible for the action.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "actionbyUser" : {
          "type" : "object",
          "description" : "The individual responsible for the action.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "activeStatus" : {
          "type" : "object",
          "description" : "Indicates whether or not the condition is active.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "additionalInformation" : {
          "description" : "An unlimited text field to use if other fields are filled.",
          "type" : "string"
        },
        "appliedDate" : {
          "description" : "The date when condition is applied. The Applied Date defaults to the current date in any of the following scenarios: 1) you are adding a standard condition, 2) you are creating a new condition, or 3) The condition is auto-assigned to a record.",
          "format" : "date-time",
          "type" : "string"
        },
        "appliedbyDepartment" : {
          "type" : "object",
          "description" : "The department responsible for applying the condition.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "appliedbyUser" : {
          "type" : "object",
          "description" : "The staff member responsible for applying the condition.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "displayNoticeInAgency" : {
          "description" : "Indicates whether or not to display the condition notice in Civic Platform when a condition is applied.",
          "type" : "boolean"
        },
        "displayNoticeInCitizens" : {
          "description" : "Indicates whether or not to display the condition notice in Citizen Access when a condition to a record or parcel is applied.",
          "type" : "boolean"
        },
        "displayNoticeInCitizensFee" : {
          "description" : "Indicates whether or not to display the condition notice in Citizen Access Fee Estimate page when a condition to a record or parcel is applied.",
          "type" : "boolean"
        },
        "effectiveDate" : {
          "description" : "The date when the condition becomes effective.",
          "format" : "date-time",
          "type" : "string"
        },
        "expirationDate" : {
          "description" : "The date when the condition expires.",
          "format" : "date-time",
          "type" : "string"
        },
        "group" : {
          "type" : "object",
          "description" : "The condition group, which is a set of condition types.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "id" : {
          "description" : "The condition system id assigned by the Civic Platform server.",
          "format" : "int64",
          "type" : "integer"
        },
        "inheritable" : {
          "type" : "object",
          "description" : "Indicates whether or not Civic Platform checks for inheritable conditions when a user associates a child record with a parent record.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "isIncludeNameInNotice" : {
          "description" : "Indicates whether or not to display the condition name in the notice.",
          "type" : "boolean"
        },
        "isIncludeShortCommentsInNotice" : {
          "description" : "Indicates whether or not to display the condition comments in the notice.",
          "type" : "boolean"
        },
        "longComments" : {
          "description" : "Narrative comments to help identify the purpose or uses of the standard condition.",
          "type" : "string"
        },
        "name" : {
          "description" : "The full name for the application contact.",
          "type" : "string"
        },
        "ownerNumber" : {
          "description" : "(For owner conditions only) The owner number the condition applies to.",
          "type" : "string"
        },
        "parcelNumber" : {
          "description" : "(For parcel conditions only) The parcel number the condition applies to.",
          "type" : "string"
        },
        "priority" : {
          "type" : "object",
          "description" : "The priority level assigned to the condition.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "publicDisplayMessage" : {
          "description" : "Text entered into this field displays in the condition notice or condition status bar for the Condition Name for the public user in Accela IVR (AIVR) and Citizen Access (ACA).",
          "type" : "string"
        },
        "resolutionAction" : {
          "description" : "The action performed in response to a condition.",
          "type" : "string"
        },
        "serviceProviderCode" : {
          "description" : "The unique agency identifier.",
          "type" : "string"
        },
        "severity" : {
          "type" : "object",
          "description" : "Indicates the severity of the condition.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "shortComments" : {
          "description" : "A brief description of the condition name. For example, the text may describe the situation that requires the system to apply the condition. You can set these short comments to display when a user accesses an application with this condition applied to it",
          "type" : "string"
        },
        "status" : {
          "type" : "object",
          "description" : "The condition status.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "statusDate" : {
          "description" : "The date when the current status changed.",
          "format" : "date-time",
          "type" : "string"
        },
        "statusType" : {
          "description" : "The status type for a standard condition or an approval condition, applied or not applied for example.",
          "type" : "string"
        },
        "type" : {
          "type" : "object",
          "description" : "The condition type.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        }
      }
    },
    "recordIdModel" : {
      "type" : "object",
      "properties" : {
        "customId" : {
          "description" : "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Accela Automation auto-generates and applies an alternate ID value when you submit a new application.",
          "type" : "string"
        },
        "id" : {
          "description" : "The record system id assigned by the Civic Platform server.",
          "type" : "string"
        },
        "serviceProviderCode" : {
          "description" : "The unique agency identifier.",
          "type" : "string"
        },
        "trackingId" : {
          "description" : "The application tracking number (IVR tracking number).",
          "format" : "int64",
          "type" : "integer"
        },
        "value" : {
          "description" : "The alphanumeric record id.",
          "type" : "string"
        }
      }
    },
    "response_simpleRecordModelArray" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "items" : {
            "$ref" : "#/definitions/simpleRecordModel"
          },
          "type" : "array"
        },
        "status" : {
          "type" : "integer",
          "description" : "The HTTP return status."
        }
      }
    },
    "simpleRecordModel" : {
      "type" : "object",
      "properties" : {
        "actualProductionUnit" : {
          "description" : "Estimated cost per production unit.",
          "format" : "double",
          "type" : "number"
        },
        "appearanceDate" : {
          "description" : "The date for a hearing appearance.",
          "format" : "date-time",
          "type" : "string"
        },
        "appearanceDayOfWeek" : {
          "description" : "The day for a hearing appearance.",
          "type" : "string"
        },
        "assignedDate" : {
          "description" : "The date the application was assigned.",
          "format" : "date-time",
          "type" : "string"
        },
        "assignedToDepartment" : {
          "description" : "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
          "type" : "string"
        },
        "assignedUser" : {
          "description" : "The staff member responsible for the action.",
          "type" : "string"
        },
        "balance" : {
          "description" : "The amount due.",
          "format" : "double",
          "type" : "number"
        },
        "booking" : {
          "description" : "Indicates whether or not there was a booking in addition to a citation.",
          "type" : "boolean"
        },
        "closedByDepartment" : {
          "description" : "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
          "type" : "string"
        },
        "closedByUser" : {
          "description" : "The staff member responsible for closure.",
          "type" : "string"
        },
        "closedDate" : {
          "description" : "The date the application was closed.",
          "format" : "date-time",
          "type" : "string"
        },
        "completeDate" : {
          "description" : "The date the application was completed.",
          "format" : "date-time",
          "type" : "string"
        },
        "completedByDepartment" : {
          "description" : "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
          "type" : "string"
        },
        "completedByUser" : {
          "description" : "The staff member responsible for completion.",
          "type" : "string"
        },
        "constructionType" : {
          "type" : "object",
          "description" : "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "costPerUnit" : {
          "description" : "The cost for one unit associated to the record.",
          "format" : "double",
          "type" : "number"
        },
        "createdBy" : {
          "description" : "The unique user id of the individual that created the entry.",
          "type" : "string"
        },
        "createdByCloning" : {
          "description" : "Indictes whether or not the record was cloned.",
          "enum" : [ "Y", "N" ],
          "type" : "string"
        },
        "customId" : {
          "description" : "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
          "type" : "string"
        },
        "defendantSignature" : {
          "description" : "Indicates whether or not a defendant's signature has been obtained.",
          "type" : "boolean"
        },
        "description" : {
          "description" : "The description of the record or item.",
          "type" : "string"
        },
        "enforceDepartment" : {
          "description" : "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
          "type" : "string"
        },
        "enforceUser" : {
          "description" : "Name of the enforcement officer.",
          "type" : "string"
        },
        "enforceUserId" : {
          "description" : "ID number of the enforcement officer.",
          "type" : "string"
        },
        "estimatedCostPerUnit" : {
          "description" : "The estimated cost per unit.",
          "format" : "double",
          "type" : "number"
        },
        "estimatedDueDate" : {
          "description" : "The estimated date of completion.",
          "format" : "date-time",
          "type" : "string"
        },
        "estimatedProductionUnit" : {
          "description" : "The estimated number of production units.",
          "format" : "double",
          "type" : "number"
        },
        "estimatedTotalJobCost" : {
          "description" : "The estimated cost of the job.",
          "format" : "double",
          "type" : "number"
        },
        "firstIssuedDate" : {
          "description" : "The first issued date for license",
          "format" : "date-time",
          "type" : "string"
        },
        "housingUnits" : {
          "description" : "The number of housing units.",
          "format" : "int64",
          "type" : "integer"
        },
        "id" : {
          "description" : "The record system id assigned by the Civic Platform server.",
          "type" : "string"
        },
        "inPossessionTime" : {
          "description" : "The application level in possession time of the time tracking feature.",
          "format" : "double",
          "type" : "number"
        },
        "infraction" : {
          "description" : "Indicates whether or not an infraction occurred.",
          "type" : "boolean"
        },
        "initiatedProduct" : {
          "description" : "The Civic Platform product  where the application is submitted: \"AA\" : Classic Accela Automation. \"ACA\" : Accela Citizen Access. \"AIVR\" : Accela Integrated Voice Response. \"AMO\" : Accela Mobile Office. \"AV360\" : Accela Asset Management, Accela Land Management.",
          "type" : "string"
        },
        "inspectorDepartment" : {
          "description" : "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
          "type" : "string"
        },
        "inspectorId" : {
          "description" : "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
          "type" : "string"
        },
        "inspectorName" : {
          "description" : "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
          "type" : "string"
        },
        "jobValue" : {
          "description" : "The value of the job.",
          "format" : "double",
          "type" : "number"
        },
        "misdemeanor" : {
          "description" : "Indicates whether or not a misdemeanor occurred.",
          "type" : "boolean"
        },
        "module" : {
          "description" : "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
          "type" : "string"
        },
        "name" : {
          "description" : "The name associated to the record.",
          "type" : "string"
        },
        "numberOfBuildings" : {
          "description" : "The number of buildings.",
          "format" : "int64",
          "type" : "integer"
        },
        "offenseWitnessed" : {
          "description" : "Indicates whether or not  there was a witness to the alleged offense.",
          "type" : "boolean"
        },
        "openedDate" : {
          "description" : "The date the application was opened.",
          "format" : "date-time",
          "type" : "string"
        },
        "overallApplicationTime" : {
          "description" : "The amount of elapsed time from the time tracking start date to the completion of the application.",
          "format" : "double",
          "type" : "number"
        },
        "priority" : {
          "type" : "object",
          "description" : "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "publicOwned" : {
          "description" : "Indicates whether or not the record is for the public.",
          "type" : "boolean"
        },
        "recordClass" : {
          "description" : "General information about the record.",
          "type" : "string"
        },
        "renewalInfo" : {
          "$ref" : "#/definitions/recordExpirationModel"
        },
        "reportedChannel" : {
          "type" : "object",
          "description" : "The incoming channel through which the applicant submitted the application.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "reportedDate" : {
          "description" : "The date the complaint was reported.",
          "format" : "date-time",
          "type" : "string"
        },
        "reportedType" : {
          "type" : "object",
          "description" : "The type of complaint or incident being reported.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "scheduledDate" : {
          "description" : "The date when the inspection gets scheduled.",
          "format" : "date-time",
          "type" : "string"
        },
        "serviceProviderCode" : {
          "description" : "The unique agency identifier,",
          "type" : "string"
        },
        "severity" : {
          "type" : "object",
          "description" : "Indicates the severity of the condition.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "shortNotes" : {
          "description" : "A brief note about the record subject.",
          "type" : "string"
        },
        "status" : {
          "type" : "object",
          "description" : "The record status.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "statusDate" : {
          "description" : "The date when the current status changed.\t",
          "format" : "date-time",
          "type" : "string"
        },
        "statusReason" : {
          "type" : "object",
          "description" : "\tThe reason for the status setting on the record.",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        },
        "totalFee" : {
          "description" : "The total amount of the fees invoiced to the record.",
          "format" : "double",
          "type" : "number"
        },
        "totalJobCost" : {
          "description" : "The combination of work order assignments (labor) and costs.",
          "format" : "double",
          "type" : "number"
        },
        "totalPay" : {
          "description" : "The total amount of pay.",
          "format" : "double",
          "type" : "number"
        },
        "trackingId" : {
          "description" : "The application tracking number (IVR tracking number).",
          "format" : "int64",
          "type" : "integer"
        },
        "type" : {
          "$ref" : "#/definitions/recordTypeModel"
        },
        "undistributedCost" : {
          "description" : "The undistributed costs for this work order.",
          "format" : "double",
          "type" : "number"
        },
        "value" : {
          "description" : "The record value.",
          "type" : "string"
        }
      }
    },
    "recordTypeModel" : {
      "type" : "object",
      "properties" : {
        "alias" : {
          "description" : "The record type alias.",
          "type" : "string"
        },
        "category" : {
          "description" : "The 4th level in a 4-level record type structure (Group-Type-Subtype-Category).",
          "type" : "string"
        },
        "filterName" : {
          "description" : "The name of the record type filter which defines the record types to be displayed for the citizen user.",
          "type" : "string"
        },
        "group" : {
          "description" : "The 1st level in a 4-level record type structure (Group-Type-Subtype-Category).",
          "type" : "string"
        },
        "id" : {
          "description" : "The record type id.",
          "type" : "string"
        },
        "module" : {
          "description" : "The module the record type belongs to.",
          "type" : "string"
        },
        "subType" : {
          "description" : "The 3rd level in a 4-level record type structure (Group-Type-Subtype-Category).",
          "type" : "string"
        },
        "text" : {
          "description" : "The localized display text.",
          "type" : "string"
        },
        "type" : {
          "description" : "The 2nd level in a 4-level record type structure (Group-Type-Subtype-Category).",
          "type" : "string"
        },
        "value" : {
          "description" : "The stored value.",
          "type" : "string"
        }
      }
    },
    "recordExpirationModel" : {
      "type" : "object",
      "properties" : {
        "expirationDate" : {
          "description" : "The date when the condition expires.",
          "format" : "date-time",
          "type" : "string"
        },
        "expirationStatus" : {
          "type" : "object",
          "description" : "Indicates whether the expiration is enabled or disabled. See [Get All Record Expiration Statuses](./api-settings.html#operation/v4.get.settings.records.expirationStatuses).",
          "properties" : {
            "text" : {
              "description" : "The localized display value.",
              "type" : "string"
            },
            "value" : {
              "description" : "The data value.",
              "type" : "string"
            }
          }
        }
      }
    },
    "customAttributeModel" : {
      "description" : "Contains a custom form consisting of the custom form id and custom field name and value pairs. For example in JSON, \"My Custom Field\": \"My Custom Value\". The custom form data uses the configured address-parcel-owner template metadata. The custom fields use the configured address-parcel-owner template metadata. Note the following custom field data types: <br/>**For a Text field**, the maximum length is 256.  <br/>**For a Number field**, any numeric form is allowed, including negative numbers.  <br/>**For a Date field**, the format is MM/dd/yyyy.  <br/>**For a Time field**, the format is hh:mm.  <br/>**For a TextArea field**, the maximum length is 4000 characters, and allows line return characters.  <br/>**For a DropdownList field**, the dropdown list values are in the options[] array.  <br/>**For a CheckBox field**, the (case-sensitive) valid values are \"UNCHECKED\" and \"CHECKED\".  <br/>**For a Radio(Y/N) field**, the (case-sensitive) valid values are \"Yes\" and \"No\".",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "The custom form id.",
          "type" : "string"
        },
        "<aCustomFieldName>" : {
          "description" : "The name of a custom field.",
          "type" : "string"
        },
        "<aCustomFieldValue>" : {
          "description" : "The value of a custom field.",
          "type" : "string"
        }
      }
    },
    "pageModel" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "description" : "The requested offset start."
        },
        "limit" : {
          "type" : "integer",
          "description" : "The requested result limit."
        },
        "total" : {
          "type" : "integer",
          "description" : "The total number of records found."
        },
        "hasmore" : {
          "type" : "boolean",
          "description" : "true if there are more results to fetch; false if all results have been fetched."
        }
      }
    }
  },
  "parameters" : {
    "authHeaderParam" : {
      "description" : "Construct oAuth2 authentication token",
      "in" : "header",
      "name" : "Authorization",
      "required" : true,
      "type" : "string"
    },
    "offset" : {
      "description" : "The offset position of the first record in the results response array. For example, if offset is 100, the first item in the results array in the response is the 100th record in the search result list.",
      "format" : "int64",
      "in" : "query",
      "name" : "offset",
      "required" : false,
      "type" : "integer"
    },
    "limit" : {
      "description" : "Search result size limit.",
      "format" : "int64",
      "in" : "query",
      "name" : "limit",
      "required" : false,
      "type" : "integer"
    },
    "fields" : {
      "description" : "Comma-delimited names of fields to be returned in the response. Note - Field names are case-sensitive and only first-level fields are supported. Invalid field names are ignored.",
      "in" : "query",
      "name" : "fields",
      "required" : false,
      "type" : "string"
    },
    "lang" : {
      "description" : "Language parameter to support I18N. Default language is en_US.",
      "in" : "query",
      "name" : "lang",
      "required" : false,
      "type" : "string"
    },
    "idAddressPathParam" : {
      "description" : "The system id of the address to fetch.",
      "format" : "int64",
      "in" : "path",
      "name" : "id",
      "required" : true,
      "type" : "integer"
    },
    "parcelIdPathParam" : {
      "description" : "The system id of the parcel to fetch.",
      "in" : "path",
      "name" : "parcelId",
      "required" : true,
      "type" : "string"
    },
    "idParcelPathParam" : {
      "description" : "The system id of the parcel to fetch.",
      "in" : "path",
      "name" : "id",
      "required" : true,
      "type" : "string"
    },
    "parcelNumberQueryParam" : {
      "description" : "Filter by parcel number.",
      "in" : "query",
      "name" : "parcelNumber",
      "required" : false,
      "type" : "string"
    },
    "idOwnerPathParam" : {
      "description" : "The system id of the owner to fetch.",
      "in" : "path",
      "name" : "id",
      "required" : true,
      "type" : "string"
    },
    "ownerIdPathParam" : {
      "description" : "The system id of the owner to fetch.",
      "in" : "path",
      "name" : "ownerId",
      "required" : true,
      "type" : "string"
    },
    "conditionTypeQueryParam" : {
      "description" : "Filter by condition type. See [Get All Condition Types](./api-settings.html#operation/v4.get.settings.conditions.types)",
      "in" : "query",
      "name" : "type",
      "type" : "string"
    },
    "conditionNameQueryParam" : {
      "description" : "Filter by condition name.",
      "in" : "query",
      "name" : "name",
      "type" : "string"
    },
    "conditionStatusQueryParam" : {
      "description" : "Filter by condition status. See [Get All Standard Condition Statuses](./api-settings.html#operation/v4.get.settings.conditions.statuses), [Get All Approval Condition Statuses](./api-settings.html#operation/v4.get.settings.conditionApprovals.statuses)",
      "in" : "query",
      "name" : "status",
      "type" : "string"
    }
  }
}